{"version":3,"sources":["components/Message.jsx","components/Messages.jsx","components/Users.jsx","components/Login.jsx","components/InputBox.jsx","App.js","index.js"],"names":["Message","messageText","className","socketid","_uniqueId","socket","io","Messages","user","useState","messages","setMessages","useEffect","console","log","emit","on","username","messageList","id","map","message","Math","floor","random","Users","users","setUsers","userList","submitCredentials","route","password","toSend","JSON","stringify","fetch","method","headers","body","then","res","json","Login","setUser","setUsername","setPassword","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","history","useHistory","handleLogin","e","a","preventDefault","alert","push","window","location","reload","handleRegister","type","placeholder","value","onChange","target","onClick","InputBox","input","setInput","onSubmit","name","autoComplete","App","key","initialValue","item","localStorage","getItem","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","useLocalStorage","cookieApproved","setCookieApproved","checkCookie","response","ok","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c08346.chunk.js","sourcesContent":["import React from \"react\";\nimport './Message.css'\nimport _uniqueId from 'lodash/uniqueId'; \n\nconst Message = ({\n  messageText,\n  className,\n  socketid,\n}) => {\n\n  // id = \"messages\"\n  //   class = \"message\"\n  //     class = \"notice\"\n  //   class = \"message own\"\n  //     class = \"messageLabel\"\n  //     class = \"messageText\"\n  //   class = \"message other\"\n  //     class = \"messageText\"\n  \n  if (className === 'message other') {\n    return (\n      <li className={className} key={_uniqueId()}>\n        <div className=\"messageLabel\">{socketid}</div>\n        <div className=\"messageText\"> {messageText} </div>\n      </li>\n    );\n  } else if (className === 'message own') {\n    return <li className={className} key={_uniqueId()}> <div className=\"messageText\">{messageText}</div> </li>;\n  } else {\n    return <li className=\"message\" key={_uniqueId()}><div className=\"notice\">{messageText}</div></li>;\n  }\n\n\n}\n\nexport default Message;\n","import React, { useEffect, useState } from \"react\";\nimport './Messages.css';\nimport Message from \"./Message\";\nimport { io } from \"socket.io-client\";\nexport const socket = io();\n\nconst Messages = ({ user }) => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    console.log(`user value in messages.js: ${user}`);\n    socket.emit('enteredChat', user);\n\n    socket.on('new message', ({ className, username, messageText }) => {\n      setMessages(messages => [...messages, { className, username, messageText }]);\n    });\n    socket.on('updateMessageList', messageList => {\n      setMessages(messageList);\n    })\n\n    return () => socket.emit('leaveChat', user);\n  }, [user]);\n\n  // Why aren't the messages showing who wrote them\n  return (\n    <ul id=\"messages\">\n      {messages.map(message => {\n        return <Message key={Math.floor(Math.random() * 100)}\n          messageText={message.messageText}\n          className={message.className}\n          username={message.username}\n        />;\n      })}\n    </ul>\n  );\n}\n\nexport default Messages;\n","import React, { useState, useEffect }  from \"react\";\nimport './Users.css';\nimport { socket } from \"./Messages\";\n// import { Math } from \"Math\";\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    socket.on('updateUserList', (userList) => {\n      console.log(`users: ${userList}`);\n      setUsers(userList);\n    });\n  }, []);\n\n  if (users) {\n    return (\n    <ul id=\"users\">\n      {users.map((user) => {\n        return <li className=\"user\" key={Math.floor(Math.random() * 100)}>{user}</li>\n      })}\n    </ul>\n   );\n  }\n  \n}\n\nexport default Users;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Login.css';\n\nconst submitCredentials = (route, username, password) => {\n  const toSend = JSON.stringify({username, password});\n  console.log(`toSend: ${toSend}`)\n  return fetch(route, { \n    //important for the port to be the same as the client sending when using proxy\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      // withCredentials: true, //in order to be able to save cookies from the response (?)\n    },\n    body: toSend //could this be a problem at the receiving end?\n  }).then(res => res.json()); //either true or false \n}\n\nconst Login = ({setUser}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [registerUsername, setRegisterUsername] = useState('');\n  const [registerPassword, setRegisterPassword] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (registerUsername || registerPassword) {\n      setUsername('');\n      setPassword('');   \n    }\n    if (username || password) {\n      setRegisterUsername('');\n      setRegisterPassword('');\n    }\n  },[username, password, registerUsername, registerPassword])\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const auth = await submitCredentials('/loginUser', username, password);\n    if (auth) {\n      setUser(username);\n      console.log(`login.jsx: setting user to '${username}'`);\n      alert('Login successful');\n      history.push('/');\n      window.location.reload(); //interesting that it doesn't work the other way around (i.e history push after reload)\n    } else {\n      alert('Login unsuccessful');\n      // TODO: Alert temporarily appearing on the bottom informing the user\n      // if the attempt was successful or unsuccessful. \n    }\n    setUsername('');\n    setPassword('');\n  }\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    if (registerUsername === '' || registerPassword === '') {\n      // TODO: again have this as a temporary message box\n      alert('All fields are required');\n      return;\n    }\n    \n    const auth = await submitCredentials('/registerUser', registerUsername, registerPassword);\n    if (auth) {\n      setUser(registerUsername)\n      console.log(`login.jsx: setting user to '${registerUsername}'`);\n\n      alert('Register successful');\n      history.push('/');\n      window.location.reload();\n    } else {\n      // The client should probably not be assuming that 'user exists'\n      // Simply because the request was rejected?\n      alert('User already exists. Register unsuccessful 1');\n    }\n    setRegisterUsername('');\n    setRegisterPassword('');\n  }\n\n  return (\n    <>\n      <div className='vertical-bar'></div>\n      <form id='login'>\n        <div className='separator'>Sign up</div>\n          <input type='text' className='login-input' placeholder='Username' value={registerUsername} onChange={(e) => setRegisterUsername(e.target.value)} />\n\n          <input type='password' className='login-input' placeholder='Password' value={registerPassword} onChange={(e) => setRegisterPassword(e.target.value)} />\n\n          <input type='password' className='login-input' placeholder='Confirm Password'  />\n          \n          <button className='login-button' onClick={handleRegister}>Sign up</button>\n\n        <div className='separator'>Log in (no password for guest)</div>\n\n          <input type='text' className='login-input' placeholder='Username' value={username}  onChange={(e) => setUsername(e.target.value)} />\n\n          <input type='password' className='login-input' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\n\n          <button className='login-button' onClick={handleLogin}>Sign in</button>\n      </form>\n\n      <div className='vertical-bar'></div>\n    </>\n  )\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport './InputBox.css';\nimport { socket } from \"./Messages\";\nimport { FaPaperPlane } from \"react-icons/fa\";\n\nconst InputBox = ({user}) => {\n\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input) {\n      console.log(`To send: ${user}, ${input}`);\n      socket.emit('client message', {username: user, messageText: input});\n      setInput('');\n    }\n  }\n\n  return (\n    <form id=\"form\" onSubmit={handleSubmit}>\n      {/* <form id=\"form\" action=\"\">  */}\n      <input name=\"message\"\n        id=\"input\"\n        autoComplete=\"off\"\n        value={input}\n        onChange={e => setInput(e.target.value)} />\n      <button id='message-button'><FaPaperPlane /></button>\n    </form>\n  );\n}\n\nexport default InputBox;","import React, { useEffect, useState} from 'react';\nimport Users from \"./components/Users\";\nimport Login from './components/Login';\nimport Messages from \"./components/Messages\";\nimport InputBox from './components/InputBox';\nimport './App.css';\n\nconst App = () => {\n  // user is not persistent across page reloads unless we use sessionStorage\n  // but the process of establishing locally stored username gets really messy\n  // with the cookie + locally generated token combo so we settle with receiving\n  // our username from the server upon connection, then propagating to InputBox via redux. \n  const [user, setUser] = useLocalStorage('user', 'not logged in');\n  const [cookieApproved, setCookieApproved] = useState(null);\n  \n  useEffect(() => {\n\n    // checking cookie validity\n    const checkCookie = async () => {\n      return fetch('/vibecheck', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'withCredentials': true,\n        },\n      }).then((response) => {\n        if (response.ok) {\n          console.log('cookie accepted');\n          setCookieApproved(true)\n        }\n        else {\n          console.log('cookie rejected');\n          setCookieApproved(false)\n        }\n      })\n    }\n    checkCookie();\n  }, [])\n\n  useEffect(() => {\n    console.log(`User value in app.js: ${user}`);\n  }, [user]);\n\n  if (cookieApproved === null) { return 'Loading...' };\n  if (cookieApproved === false) {\n    return (<>\n      <div className=\"sidebar\"></div>\n      <div className=\"content\">\n        {/* <div className=\"bar\"></div> */}\n        <Login setUser={setUser}/>\n        {/* <div className=\"bar\"></div> */}\n      </div>\n      <div className=\"sidebar\"></div>\n    </>);\n  } else {\n    return (\n      <>\n        <div className=\"sidebar\" id=\"user-sidebar\">\n          <Users />\n        </div>\n        <div className=\"content\">\n          <Messages user={user} />\n          <InputBox user={user} />\n        </div>\n        <div className=\"sidebar\"></div>\n      </>\n    );\n  }\n}\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}